{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\weather\\\\src\\\\containers\\\\Bitcoin_list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass BitcoinList extends Component {\n  renderBitcoin(Data) {\n    console.log(Data);\n    const name = Data.BTC_BCN.last; // const country = Data.city.country;\n    // const temps = Data.list.map(bitcoin => weather.main.temp)\n    // const presure = Data.list.map(weather => weather.main.pressure)\n    // const humidty = Data.list.map(weather => weather.main.humidity)\n\n    return React.createElement(\"tr\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, name));\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"city\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"temps\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.props.bitcoin.map(this.renderBitcoin)));\n  }\n\n} // mapSrtateToProps funciton\n\n\nfunction mapSrtateToProps(state) {\n  return {\n    bitcoin: state.bitcoin\n  };\n} // connect mapping\n\n\nexport default connect(mapSrtateToProps)(BitcoinList);","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/weather/src/containers/Bitcoin_list.js"],"names":["React","Component","connect","Chart","BitcoinList","renderBitcoin","Data","console","log","name","BTC_BCN","last","render","props","bitcoin","map","mapSrtateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,aAAa,CAACC,IAAD,EAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,IAAI,GAAGH,IAAI,CAACI,OAAL,CAAaC,IAA1B,CAFiB,CAGjB;AACA;AACA;AACA;;AACA,WACE;AAAI,MAAA,GAAG,EAAIF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADA,CADF;AASG;;AAGLG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,KAAKV,aAA5B,CADH,CARF,CADF;AAcD;;AAnCiC,C,CAsCpC;;;AACA,SAASW,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,SAAM;AAAEH,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAAjB,GAAN;AACD,C,CAED;;;AACA,eAAeZ,OAAO,CAACc,gBAAD,CAAP,CAA0BZ,WAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass BitcoinList extends Component {\n  renderBitcoin(Data){\n    console.log(Data)\n    const name = Data.BTC_BCN.last;\n    // const country = Data.city.country;\n    // const temps = Data.list.map(bitcoin => weather.main.temp)\n    // const presure = Data.list.map(weather => weather.main.pressure)\n    // const humidty = Data.list.map(weather => weather.main.humidity)\n    return(\n      <tr key = {name}>\n      <th>{name}</th>\n      {/* <th><Chart data={temps} color='orange'/></th>\n      <th><Chart data={presure} color='green'/></th>\n      <th><Chart data={humidty} color='blue'/></th> */}\n    </tr>\n\n    )\n      }\n        \n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>city</th>\n            <th>temps</th>\n\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.bitcoin.map(this.renderBitcoin)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// mapSrtateToProps funciton\nfunction mapSrtateToProps(state){\n  return{ bitcoin: state.bitcoin};\n}\n\n// connect mapping\nexport default connect(mapSrtateToProps)(BitcoinList);"]},"metadata":{},"sourceType":"module"}