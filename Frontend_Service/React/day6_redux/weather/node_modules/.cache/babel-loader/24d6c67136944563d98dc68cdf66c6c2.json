{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\TIL\\\\Frontend_Service\\\\React\\\\day6_redux\\\\bitcoin\\\\src\\\\containers\\\\weather_list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass WeatherList extends Component {\n  renderWeather(v) {\n    const cityData = v.d.data; // cityData.d(Promise), cityData.n\n    // cityData.d.then(\n    //   v => console.log(v.data.city.name)\n    // );\n    // setTimeout -> new Promise() ...\n\n    const name = cityData.city.name;\n    const country = cityData.city.country;\n    const temps = cityData.list.map(weather => weather.main.temp);\n    const pressures = cityData.list.map(weather => weather.main.pressure);\n    const humidities = cityData.list.map(weather => weather.main.humidity);\n    return React.createElement(\"tr\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, name, \",\", country), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: temps,\n      color: \"orange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: pressures,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      data: humidities,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Temperature\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Pressure\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Humidity\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.weather.map(this.renderWeather)));\n  }\n\n} // mapStateToProps funciton\n\n\nfunction mapStateToProps(state) {\n  return {\n    weather: state.weather\n  };\n} // connect mapping\n\n\nexport default connect(mapStateToProps)(WeatherList);","map":{"version":3,"sources":["C:/Users/HPE/TIL/Frontend_Service/React/day6_redux/bitcoin/src/containers/weather_list.js"],"names":["React","Component","connect","Chart","WeatherList","renderWeather","v","cityData","d","data","name","city","country","temps","list","map","weather","main","temp","pressures","pressure","humidities","humidity","render","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAClCI,EAAAA,aAAa,CAACC,CAAD,EAAI;AACf,UAAMC,QAAQ,GAAGD,CAAC,CAACE,CAAF,CAAIC,IAArB,CADe,CAEf;AACA;AACA;AACA;AACA;;AAEA,UAAMC,IAAI,GAAGH,QAAQ,CAACI,IAAT,CAAcD,IAA3B;AACA,UAAME,OAAO,GAAGL,QAAQ,CAACI,IAAT,CAAcC,OAA9B;AACA,UAAMC,KAAK,GAAGN,QAAQ,CAACO,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,IAA1C,CAAd;AAGA,UAAMC,SAAS,GAAGZ,QAAQ,CAACO,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaG,QAA1C,CAAlB;AACA,UAAMC,UAAU,GAAGd,QAAQ,CAACO,IAAT,CAAcC,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaK,QAA1C,CAAnB;AAEA,WACE;AAAI,MAAA,GAAG,EAAEZ,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,OAAYE,OAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,KAAb;AAAoB,MAAA,KAAK,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEM,SAAb;AAAwB,MAAA,KAAK,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,UAAb;AAAyB,MAAA,KAAK,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAJF,CADF;AAQD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWR,OAAX,CAAmBD,GAAnB,CAAuB,KAAKV,aAA5B,CADH,CATF,CADF;AAeD;;AA3CiC,C,CA8CpC;;;AACA,SAASoB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,OAAO,EAAEU,KAAK,CAACV;AADV,GAAP;AAGD,C,CAED;;;AACA,eAAed,OAAO,CAACuB,eAAD,CAAP,CAAyBrB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Chart from '../components/chart';\r\n\r\nclass WeatherList extends Component {\r\n  renderWeather(v) {\r\n    const cityData = v.d.data;\r\n    // cityData.d(Promise), cityData.n\r\n    // cityData.d.then(\r\n    //   v => console.log(v.data.city.name)\r\n    // );\r\n    // setTimeout -> new Promise() ...\r\n\r\n    const name = cityData.city.name;\r\n    const country = cityData.city.country;\r\n    const temps = cityData.list.map(weather => weather.main.temp)\r\n    ;\r\n    \r\n    const pressures = cityData.list.map(weather => weather.main.pressure);\r\n    const humidities = cityData.list.map(weather => weather.main.humidity);\r\n\r\n    return (\r\n      <tr key={name}>\r\n        <td>{name},{country}</td>\r\n        <td><Chart data={temps} color=\"orange\"/></td>\r\n        <td><Chart data={pressures} color=\"green\"/></td>\r\n        <td><Chart data={humidities} color=\"black\"/></td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>City</th>\r\n            <th>Temperature</th>\r\n            <th>Pressure</th>\r\n            <th>Humidity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.weather.map(this.renderWeather)}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\n// mapStateToProps funciton\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    weather: state.weather \r\n  };\r\n}\r\n\r\n// connect mapping\r\nexport default connect(mapStateToProps)(WeatherList);"]},"metadata":{},"sourceType":"module"}