{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\weather\\\\src\\\\containers\\\\Bitcoin_list.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass BitcoinList extends Component {\n  convertDate(timestamp) {\n    let date = new Date(timestamp * 1000);\n    let y = date.getFullYear();\n    let m = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n    let d = date.getDate() < 10 ? '0' + date.getDate() : date.getDate(); // let h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    // let mi= date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n    return y + \"-\" + m + \"-\" + d;\n  }\n\n  renderBitcoin(Data) {\n    console.log(Data[0].date);\n    const name = this.convertDate(Data[0].date);\n    console.log(name); // const country = Data.city.country;\n\n    const temps = Data.map. // const presure = Data.list.map(weather => weather.main.pressure)\n    // const humidty = Data.list.map(weather => weather.main.humidity)\n    return(React.createElement(\"tr\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, name)));\n  }\n\n  render() {\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"city\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"temps\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.bitcoin.map(this.renderBitcoin), this.convertDate(1546300800)));\n  }\n\n} // mapSrtateToProps funciton\n\n\nfunction mapSrtateToProps(state) {\n  return {\n    bitcoin: state.bitcoin\n  };\n} // connect mapping\n\n\nexport default connect(mapSrtateToProps)(BitcoinList);","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/weather/src/containers/Bitcoin_list.js"],"names":["React","Component","connect","Chart","BitcoinList","convertDate","timestamp","date","Date","y","getFullYear","m","getMonth","d","getDate","renderBitcoin","Data","console","log","name","temps","map","return","render","props","bitcoin","mapSrtateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEpCI,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAS,GAAG,IAArB,CAAX;AACA,QAAIG,CAAC,GAAGF,IAAI,CAACG,WAAL,EAAR;AACA,QAAIC,CAAC,GAAIJ,IAAI,CAACK,QAAL,KAAkB,CAAnB,GAAwB,EAAxB,GAA6B,OAAOL,IAAI,CAACK,QAAL,KAAkB,CAAzB,CAA7B,GAA2DL,IAAI,CAACK,QAAL,KAAkB,CAArF;AACA,QAAIC,CAAC,GAAGN,IAAI,CAACO,OAAL,KAAiB,EAAjB,GAAsB,MAAMP,IAAI,CAACO,OAAL,EAA5B,GAA6CP,IAAI,CAACO,OAAL,EAArD,CAJmB,CAKnB;AACA;;AAEA,WAAOL,CAAC,GAAC,GAAF,GAAME,CAAN,GAAQ,GAAR,GAAYE,CAAnB;AAED;;AAIDE,EAAAA,aAAa,CAACC,IAAD,EAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQT,IAApB;AACA,UAAMY,IAAI,GAAG,KAAKd,WAAL,CAAiBW,IAAI,CAAC,CAAD,CAAJ,CAAQT,IAAzB,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAHiB,CAIjB;;AACA,UAAMC,KAAK,GAAGJ,IAAI,CAACK,GAAL,EACd;AACA;AACAC,IAAAA,MAHc,CAIZ;AAAI,MAAA,GAAG,EAAIH,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADA,CAJY,CAAd;AAYG;;AAGLI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,CAAmBJ,GAAnB,CAAuB,KAAKN,aAA5B,CADH,EAEG,KAAKV,WAAL,CAAiB,UAAjB,CAFH,CARF,CADF;AAeD;;AApDiC,C,CAuDpC;;;AACA,SAASqB,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,SAAM;AAAEF,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAAjB,GAAN;AACD,C,CAED;;;AACA,eAAevB,OAAO,CAACwB,gBAAD,CAAP,CAA0BtB,WAA1B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from '../components/chart';\n\nclass BitcoinList extends Component {\n  \nconvertDate(timestamp) {\n    let date = new Date(timestamp * 1000);\n    let y = date.getFullYear() ;\n    let m = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n    let d = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    // let h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    // let mi= date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n  \n    return y+\"-\"+m+\"-\"+d;\n\n  }\n\n  \n\n  renderBitcoin(Data){\n    console.log(Data[0].date)\n    const name = this.convertDate(Data[0].date)\n    console.log(name)\n    // const country = Data.city.country;\n    const temps = Data.map.\n    // const presure = Data.list.map(weather => weather.main.pressure)\n    // const humidty = Data.list.map(weather => weather.main.humidity)\n    return(\n      <tr key = {name}>\n      <th>{name}</th>\n      {/* <th><Chart data={temps} color='orange'/></th>\n      <th><Chart data={presure} color='green'/></th>\n      <th><Chart data={humidty} color='blue'/></th> */}\n    </tr>\n\n    )\n      }\n        \n\n  render() {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>city</th>\n            <th>temps</th>\n\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.bitcoin.map(this.renderBitcoin)}\n          {this.convertDate(1546300800)}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// mapSrtateToProps funciton\nfunction mapSrtateToProps(state){\n  return{ bitcoin: state.bitcoin};\n}\n\n// connect mapping\nexport default connect(mapSrtateToProps)(BitcoinList);"]},"metadata":{},"sourceType":"module"}