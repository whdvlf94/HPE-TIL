{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\posts\\\\src\\\\components\\\\posts_new.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\n\nclass PostsNew extends Component {\n  renderField(field) {\n    const {\n      meta\n    } = field; //  meta = field.meta \n\n    console.log(meta);\n    return React.createElement(\"div\", {\n      className: \"form-group has-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, field.label), React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      type: \"text\"\n    }, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    })));\n  }\n\n  onSubmit(values) {// submit values to creatPost function()\n  }\n\n  render() {\n    // const handleSubmit = this.props.handleSubmit;\n    const {\n      handleSubmit\n    } = this.props;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title For Post\",\n      name: \"title\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Category\",\n      name: \"category\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Blog contents\",\n      name: \"contents\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Link, {\n      to: \"\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.title || values.title.length < 3) {\n    errors.title = \"제목을 3 글자 이상 입력하세요.\";\n  }\n\n  if (!values.category) {\n    errors.category = \"카테고리를 지정해 주세요.\";\n  }\n\n  if (!values.contents) {\n    errors.contents = \"블로그의 내용을 입력하세요.\";\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  form: \"PostsNewForm\"\n})(connect(null, {\n  createPost\n})(PostsNew));","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/posts/src/components/posts_new.js"],"names":["React","Component","Field","reduxForm","Link","connect","createPost","PostsNew","renderField","field","meta","console","log","label","input","onSubmit","values","render","handleSubmit","props","bind","validate","errors","title","length","category","contents","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAEjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,KAAjB,CADiB,CACO;;AACtBE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,KAAK,CAACI,KAAd,CADF,EAEE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAC;AAArC,OACQJ,KAAK,CAACK,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AASH;;AAEDC,EAAAA,QAAQ,CAACC,MAAD,EAAS,CACf;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AAEA,WACE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAAC,KAAKH,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,SAAS,EAAE,KAAKZ,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAC,UAA7B;AAAwC,MAAA,SAAS,EAAE,KAAKA,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,eAAb;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAA6C,MAAA,SAAS,EAAE,KAAKA,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,EAAT;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF;AAUD;;AApCgC;;AAsCjC,SAASa,QAAT,CAAkBL,MAAlB,EAA0B;AACxB,QAAMM,MAAM,GAAG,EAAf;;AAEF,MAAG,CAACN,MAAM,CAACO,KAAR,IAAiBP,MAAM,CAACO,KAAP,CAAaC,MAAb,GAAqB,CAAzC,EAA6C;AAC3CF,IAAAA,MAAM,CAACC,KAAP,GAAe,oBAAf;AACD;;AACD,MAAG,CAACP,MAAM,CAACS,QAAX,EAAqB;AACnBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,gBAAlB;AACD;;AACD,MAAG,CAACT,MAAM,CAACU,QAAX,EAAqB;AACnBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,iBAAlB;AACD;;AACD,SAAOJ,MAAP;AACC;;AAGD,eAAenB,SAAS,CAAE;AACxBkB,EAAAA,QAAQ,EAAEA,QADc;AAExBM,EAAAA,IAAI,EAAE;AAFkB,CAAF,CAAT,CAIZtB,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA4BC,QAA5B,CAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createPost } from '../actions';\r\n\r\nclass PostsNew extends Component {\r\n\r\nrenderField(field) {\r\n  const { meta } = field; //  meta = field.meta \r\n    console.log(meta);\r\n\r\n    return (\r\n      <div className=\"form-group has-danger\">\r\n        <label>{field.label}</label>\r\n        <input className=\"form-control\" type='text'\r\n            {...field.input} />\r\n        {/* {meta.error} */}\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nonSubmit(values) {\r\n  // submit values to creatPost function()\r\n}\r\n\r\n\r\nrender() {\r\n  // const handleSubmit = this.props.handleSubmit;\r\n  const { handleSubmit } = this.props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n      <Field label=\"Title For Post\" name=\"title\" component={this.renderField} />\r\n      <Field label=\"Category\" name=\"category\" component={this.renderField} />\r\n      <Field label=\"Blog contents\" name=\"contents\" component={this.renderField} />\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      <Link to=\"\" className=\"btn btn-danger\">Cancel</Link>\r\n    </form>\r\n  );\r\n}\r\n}\r\nfunction validate(values) {\r\n  const errors = {}\r\n\r\nif(!values.title || values.title.length <3 ) {\r\n  errors.title = \"제목을 3 글자 이상 입력하세요.\";\r\n}\r\nif(!values.category) {\r\n  errors.category = \"카테고리를 지정해 주세요.\";\r\n}\r\nif(!values.contents) {\r\n  errors.contents = \"블로그의 내용을 입력하세요.\";\r\n}\r\nreturn errors;\r\n}\r\n\r\n\r\nexport default reduxForm ({\r\n  validate: validate,\r\n  form: \"PostsNewForm\"\r\n  \r\n})(connect(null, {createPost})(PostsNew))"]},"metadata":{},"sourceType":"module"}