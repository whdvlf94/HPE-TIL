{"ast":null,"code":"var getErrorKeys = function getErrorKeys(name, type) {\n  switch (type) {\n    case 'Field':\n      return [name, name + \"._error\"];\n\n    case 'FieldArray':\n      return [name + \"._error\"];\n\n    default:\n      throw new Error('Unknown field type');\n  }\n};\n\nvar createHasError = function createHasError(_ref) {\n  var getIn = _ref.getIn;\n\n  var hasError = function hasError(field, syncErrors, asyncErrors, submitErrors) {\n    if (!syncErrors && !asyncErrors && !submitErrors) {\n      return false;\n    }\n\n    var name = getIn(field, 'name');\n    var type = getIn(field, 'type');\n    return getErrorKeys(name, type).some(function (key) {\n      return getIn(syncErrors, key) || getIn(asyncErrors, key) || getIn(submitErrors, key);\n    });\n  };\n\n  return hasError;\n};\n\nexport default createHasError;","map":{"version":3,"sources":["C:/Users/skybl/TIL/Frontend_Service/React/posts/node_modules/redux-form/es/hasError.js"],"names":["getErrorKeys","name","type","Error","createHasError","_ref","getIn","hasError","field","syncErrors","asyncErrors","submitErrors","some","key"],"mappings":"AAAA,IAAIA,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AACnD,UAAQA,IAAR;AACE,SAAK,OAAL;AACE,aAAO,CAACD,IAAD,EAAOA,IAAI,GAAG,SAAd,CAAP;;AAEF,SAAK,YAAL;AACE,aAAO,CAACA,IAAI,GAAG,SAAR,CAAP;;AAEF;AACE,YAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AARJ;AAUD,CAXD;;AAaA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjD,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;;AAEA,MAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,YAAlD,EAAgE;AAC7E,QAAI,CAACF,UAAD,IAAe,CAACC,WAAhB,IAA+B,CAACC,YAApC,EAAkD;AAChD,aAAO,KAAP;AACD;;AAED,QAAIV,IAAI,GAAGK,KAAK,CAACE,KAAD,EAAQ,MAAR,CAAhB;AACA,QAAIN,IAAI,GAAGI,KAAK,CAACE,KAAD,EAAQ,MAAR,CAAhB;AACA,WAAOR,YAAY,CAACC,IAAD,EAAOC,IAAP,CAAZ,CAAyBU,IAAzB,CAA8B,UAAUC,GAAV,EAAe;AAClD,aAAOP,KAAK,CAACG,UAAD,EAAaI,GAAb,CAAL,IAA0BP,KAAK,CAACI,WAAD,EAAcG,GAAd,CAA/B,IAAqDP,KAAK,CAACK,YAAD,EAAeE,GAAf,CAAjE;AACD,KAFM,CAAP;AAGD,GAVD;;AAYA,SAAON,QAAP;AACD,CAhBD;;AAkBA,eAAeH,cAAf","sourcesContent":["var getErrorKeys = function getErrorKeys(name, type) {\r\n  switch (type) {\r\n    case 'Field':\r\n      return [name, name + \"._error\"];\r\n\r\n    case 'FieldArray':\r\n      return [name + \"._error\"];\r\n\r\n    default:\r\n      throw new Error('Unknown field type');\r\n  }\r\n};\r\n\r\nvar createHasError = function createHasError(_ref) {\r\n  var getIn = _ref.getIn;\r\n\r\n  var hasError = function hasError(field, syncErrors, asyncErrors, submitErrors) {\r\n    if (!syncErrors && !asyncErrors && !submitErrors) {\r\n      return false;\r\n    }\r\n\r\n    var name = getIn(field, 'name');\r\n    var type = getIn(field, 'type');\r\n    return getErrorKeys(name, type).some(function (key) {\r\n      return getIn(syncErrors, key) || getIn(asyncErrors, key) || getIn(submitErrors, key);\r\n    });\r\n  };\r\n\r\n  return hasError;\r\n};\r\n\r\nexport default createHasError;"]},"metadata":{},"sourceType":"module"}