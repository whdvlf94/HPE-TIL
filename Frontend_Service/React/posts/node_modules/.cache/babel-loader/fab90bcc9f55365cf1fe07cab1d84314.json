{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\posts\\\\src\\\\components\\\\posts_index.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/index';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nclass PostsIndex extends Component {\n  // define a lifecycle function for retrieve data  \n  componentDidMount() {\n    console.log('componentDidMount Called');\n    this.props.fetchPosts(); // fetchPosts가 실행될 때 마다 호출\n  }\n\n  renderPosts() {\n    // list -> 개별 <li>  태그로 출력\n    return _.map(this.props.posts, post => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, post.title);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-xs-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/blogs/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Add a Post\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Posts\"), React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.renderPosts()));\n  }\n\n} // 상태 관리\n\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    posts: state.posts\n  };\n} // 액션 관리\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchPosts\n  }, dispatch);\n} // connect(상태관리 함수, 액션관리 함수)(연결 컴포넌트)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsIndex); // ES6 -> {name:name} => {name}\n// [액션관리 함수] 위의 방식 대신 아래와 같이 사용해도 된다.\n// export default connect(mapStateToProps, {fetchPosts})(PostsIndex);","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/posts/src/components/posts_index.js"],"names":["_","React","Component","connect","fetchPosts","Link","bindActionCreators","PostsIndex","componentDidMount","console","log","props","renderPosts","map","posts","post","id","title","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAEjC;AACAM,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,SAAKC,KAAL,CAAWP,UAAX,GAFmB,CAGnB;AACD;;AAEDQ,EAAAA,WAAW,GAAE;AACX;AACA,WAAOZ,CAAC,CAACa,GAAF,CAAM,KAAKF,KAAL,CAAWG,KAAjB,EAAwBC,IAAI,IAAI;AACrC,aAEA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAgC,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,KADR,CAFA;AAMH,KAPQ,CAAP;AAUD;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AACE,MAAA,EAAE,EAAC,YADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,EAOE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,WAAL,EADH,CAPF,CADF;AAaD;;AAtCgC,C,CAyCnC;;;AACA,SAASO,eAAT,CAA0BC,KAA1B,EAAiC;AAC/BX,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,SAAM;AAACN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AAAd,GAAN;AACD,C,CAED;;;AACA,SAASO,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAOhB,kBAAkB,CAAC;AAACF,IAAAA;AAAD,GAAD,EAAekB,QAAf,CAAzB;AAED,C,CAED;;;AACA,eAAenB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf,C,CAEA;AACA;AACA","sourcesContent":["import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions/index';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass PostsIndex extends Component {\r\n\r\n  // define a lifecycle function for retrieve data  \r\n  componentDidMount () {\r\n    console.log('componentDidMount Called');\r\n    this.props.fetchPosts();\r\n    // fetchPosts가 실행될 때 마다 호출\r\n  }\r\n\r\n  renderPosts(){\r\n    // list -> 개별 <li>  태그로 출력\r\n    return _.map(this.props.posts, post => {\r\n      return(\r\n\r\n      <li className='list-group-item' key={post.id}>\r\n        {post.title}\r\n      </li>\r\n      ) \r\n  })\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"text-xs-right\">\r\n          <Link className=\"btn btn-primary\"\r\n            to=\"/blogs/new\">Add a Post</Link>\r\n        </div>\r\n\r\n        <h3>Posts</h3> \r\n        <ul className=\"list-group\">\r\n          {this.renderPosts()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 상태 관리\r\nfunction mapStateToProps (state) {\r\n  console.log(state)\r\n  return{posts: state.posts}\r\n}\r\n\r\n// 액션 관리\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators({fetchPosts},(dispatch))\r\n\r\n}\r\n\r\n// connect(상태관리 함수, 액션관리 함수)(연결 컴포넌트)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsIndex);\r\n\r\n// ES6 -> {name:name} => {name}\r\n// [액션관리 함수] 위의 방식 대신 아래와 같이 사용해도 된다.\r\n// export default connect(mapStateToProps, {fetchPosts})(PostsIndex);\r\n\r\n"]},"metadata":{},"sourceType":"module"}