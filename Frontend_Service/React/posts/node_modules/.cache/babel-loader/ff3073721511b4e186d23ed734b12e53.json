{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\posts\\\\src\\\\components\\\\posts_new.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions';\n\nclass PostsNew extends Component {\n  renderField(field) {\n    const {\n      meta: {\n        touched,\n        error\n      }\n    } = field; //  meta = field.meta \n    // console.log(\"touched\", touched);\n    // console.log(\"error\", error);\n\n    const className = `form-group ${touched && error ? 'has-danger' : ''}`;\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, field.label), React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      type: \"text\"\n    }, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-help\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, touched ? error : ''));\n  }\n\n  onSubmit(values) {\n    // submit values to creatPost function()\n    this.props.createPost(values, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    // const handleSubmit = this.props.handleSubmit;\n    const {\n      handleSubmit\n    } = this.props;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Title For Post\",\n      name: \"title\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Category\",\n      name: \"category\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Blog contents\",\n      name: \"contents\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Link, {\n      to: \"\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.title || values.title.length < 3) {\n    errors.title = \"제목을 3 글자 이상 입력하세요.\";\n  }\n\n  if (!values.category) {\n    errors.category = \"카테고리를 지정해 주세요.\";\n  }\n\n  if (!values.contents) {\n    errors.contents = \"블로그의 내용을 입력하세요.\";\n  }\n\n  return errors;\n}\n\nexport default reduxForm({\n  validate: validate,\n  form: \"PostsNewForm\"\n})(connect(null, {\n  createPost\n})(PostsNew));","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/posts/src/components/posts_new.js"],"names":["React","Component","Field","reduxForm","Link","connect","createPost","PostsNew","renderField","field","meta","touched","error","className","label","input","onSubmit","values","props","history","push","render","handleSubmit","bind","validate","errors","title","length","category","contents","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createPost } from '../actions';\r\n\r\nclass PostsNew extends Component {\r\n\r\nrenderField(field) {\r\n  const { meta : {touched, error} } = field; //  meta = field.meta \r\n    // console.log(\"touched\", touched);\r\n    // console.log(\"error\", error);\r\n\r\n    const className = `form-group ${touched && error ? 'has-danger' : '' }`\r\n    return (\r\n      \r\n      <div className={className}>\r\n        <label>{field.label}</label>\r\n        <input className=\"form-control\" type='text'{...field.input} />\r\n        <div className='text-help'>\r\n\r\n        {touched ? error :''}\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nonSubmit(values) {\r\n  // submit values to creatPost function()\r\n  this.props.createPost(values, () => {\r\n    this.props.history.push('/');\r\n  });\r\n}\r\n\r\n\r\nrender() {\r\n  // const handleSubmit = this.props.handleSubmit;\r\n  const { handleSubmit } = this.props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n      <Field label=\"Title For Post\" name=\"title\" component={this.renderField} />\r\n      <Field label=\"Category\" name=\"category\" component={this.renderField} />\r\n      <Field label=\"Blog contents\" name=\"contents\" component={this.renderField} />\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      <Link to=\"\" className=\"btn btn-danger\">Cancel</Link>\r\n    </form>\r\n  );\r\n}\r\n}\r\nfunction validate(values) {\r\n  const errors = {}\r\n\r\nif(!values.title || values.title.length <3 ) {\r\n  errors.title = \"제목을 3 글자 이상 입력하세요.\";\r\n}\r\nif(!values.category) {\r\n  errors.category = \"카테고리를 지정해 주세요.\";\r\n}\r\nif(!values.contents) {\r\n  errors.contents = \"블로그의 내용을 입력하세요.\";\r\n}\r\nreturn errors;\r\n}\r\n\r\n\r\nexport default reduxForm ({\r\n  validate: validate,\r\n  form: \"PostsNewForm\"\r\n  \r\n})(connect(null, {createPost})(PostsNew))"]},"metadata":{},"sourceType":"module"}