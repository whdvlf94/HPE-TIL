{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HPE\\\\Work\\\\git\\\\cloud-computing\\\\posts\\\\src\\\\components\\\\posts_index.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/index';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\n\nclass PostsIndex extends Component {\n  // define a lifecycle function for retrieve data  \n  componentDidMount() {\n    console.log('componentDidMount Called');\n    this.props.fetchPosts(); // fetchPosts가 실행될 때 마다 호출\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Post 1 title\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Post 2 title\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Post 3 title\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchPosts\n  }, dispatch);\n} // connect(상태관리 함수, 액션관리 함수)(연결 컴포넌트)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsIndex); // ES6 -> {name:name} => {name}\n// [액션관리 함수] 위의 방식 대신 아래와 같이 사용해도 된다.\n// export default connect(mapStateToProps, {fetchPosts})(PostsIndex);","map":{"version":3,"sources":["C:/Users/HPE/Work/git/cloud-computing/posts/src/components/posts_index.js"],"names":["_","React","Component","connect","fetchPosts","Link","bindActionCreators","PostsIndex","componentDidMount","console","log","props","render","mapStateToProps","state","posts","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACjC;AACAM,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,SAAKC,KAAL,CAAWP,UAAX,GAFmB,CAGnB;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CADF;AAOD;;AAhBgC;;AAmBnC,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAM;AAACC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAd,GAAN;AACD;;AAED,SAASC,kBAAT,CAA6BC,QAA7B,EAAuC;AACrC,SAAOX,kBAAkB,CAAC;AAACF,IAAAA;AAAD,GAAD,EAAea,QAAf,CAAzB;AAED,C,CAED;;;AACA,eAAed,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,UAA7C,CAAf,C,CAEA;AACA;AACA","sourcesContent":["import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions/index';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nclass PostsIndex extends Component {\r\n  // define a lifecycle function for retrieve data  \r\n  componentDidMount () {\r\n    console.log('componentDidMount Called');\r\n    this.props.fetchPosts();\r\n    // fetchPosts가 실행될 때 마다 호출\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Post 1 title</div>\r\n        <div>Post 2 title</div>\r\n        <div>Post 3 title</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return{posts: state.posts}\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators({fetchPosts},(dispatch))\r\n\r\n}\r\n\r\n// connect(상태관리 함수, 액션관리 함수)(연결 컴포넌트)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsIndex);\r\n\r\n// ES6 -> {name:name} => {name}\r\n// [액션관리 함수] 위의 방식 대신 아래와 같이 사용해도 된다.\r\n// export default connect(mapStateToProps, {fetchPosts})(PostsIndex);\r\n\r\n"]},"metadata":{},"sourceType":"module"}